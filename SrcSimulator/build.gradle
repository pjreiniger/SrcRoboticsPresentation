


plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}


repositories {
    mavenCentral()

    maven {
        url "http://raw.githubusercontent.com/pjreiniger/maven_repo/master/"
    }
}

ext.publishing_path = '/home/pj/GitHub/FIRST/2017/maven_repo/'
if(hasProperty('maven_repo'))
{
    ext.publishing_path = maven_repo
}


sourceSets {
    main
    {
        java
        {
            srcDirs = ["${rootDir}/../SrcRobot/src"]
        }
    }
}

configurations {
    zippedDeps
}

dependencies {
    
    // Snobot Sim
    compile    'com.snobot.simulator:snobot_sim_gui:0.1:gui'
    compile    'com.snobot.simulator:snobot_sim_native:0.1:uber_native-linux'
    compile    'com.snobot.simulator:snobot_sim_native:0.1:uber_native-windows'
    zippedDeps 'com.snobot.simulator:snobot_sim_gui:0.1:javadeps@zip'
    
    compile fileTree(dir: 'dependencies', include: '*.jar')
}
    

configurations.zippedDeps.files.each { file ->

    copy {
        def depName = file.name.substring(0, file.name.indexOf('-'))
        from zipTree(file) 
        into "."
        
        exclude "jinput-platform*.jar"
    }
}

configurations.compile.files.each { file ->

    copy {
        from file
        into "dependencies/"
        include "snobot_sim*"
        include "ctre_override*"
    }
}

jar {
    dependsOn { classes }
    
    manifest {
      attributes(
        'Main-Class': 'com.snobot.simulator.Main'
      )
    }
}

clean {
    delete fileTree("dependencies") {
        include "*.jar"
    }
}

dependencies {

}


mainClassName = "com.snobot.simulator.Main"
applicationDefaultJvmArgs = ["-Djava.library.path=libs"]



